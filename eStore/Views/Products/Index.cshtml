@model IEnumerable<BusinessObject.Models.Product>
@using BusinessObject.Models;

@{
    ViewData["Title"] = "Index";
    var order = (Order)ViewBag.Order;
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form id="form" method="get">
    <div class="form-group">
        <label for="">Enter product name</label>
        <input type="text"
               class="form-control" name="" id="search-productName" aria-describedby="helpId" placeholder="">
        <small class="form-text text-muted">Help text</small>
    </div>
    <div class="form-group">
        <label for="">Enter unit price</label>
        <input type="number" class="form-control" name="" id="search-unitPrice" aria-describedby="helpId" placeholder="">
        <small class="form-text text-muted">Help text</small>
    </div>
    <button type="submit">Search</button>
</form>

<table id="table" class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Weight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsInStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody id="body">
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsInStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
            </td>
            <td>
                <button onclick="addToCart(@order.OrderId, @item.ProductId, @item.UnitPrice, @item.UnitsInStock)">Add To Cart</button>
            </td>
        </tr>
}
    </tbody>
</table>

@section scripts{
    <script>
        debugger
        $('#form').submit(function (e) {
            var inputProductName = $('#search-productName').val()
            var inputUnitPrice = $('#search-unitPrice').val()
            var _url = `https://localhost:7221/api/Products?$filter=indexof(ProductName, '${inputProductName}') gt -1`
            if (inputUnitPrice != null && inputUnitPrice != undefined && inputUnitPrice!='') {
                _url += ` and UnitPrice eq ${inputUnitPrice}`
            }

            e.preventDefault();
            $.ajax({
                url: _url,
                type: 'GET',
                error: function (response) {
                    DisplayText('Load lại không thành công: ' + response.statusText);
                },
                success: function (response) {
                    DisplayText('Thành công');
                    $('#body').html('')
                    // Gán dữ liệu vào biến products (nếu cần)
                    var products = response;
                    $('#body').html('')

                    response.forEach(item => {
                        $('#body').append(` <tr>
                                                <td>
                                                    ${item.productName}
                                                </td>
                                                <td>
                                                    ${item.weight}
                                                </td>
                                                <td>
                                                    ${item.unitPrice}
                                                </td>
                                                <td>
                                                    ${item.unitsInStock}
                                                </td>
                                                <td>
                                                    ${item.category.categoryName}
                                                </td>
                                                <td>
                                                    <a href="/Products/Edit/${item.categoryId}">Edit</a> |
                                                    <a href="/Products/Details/${item.categoryId}">Details</a> |
                                                            <a href="/Products/Delete/${item.categoryId}">Delete</a>
                                                </td>
                                                <td>
                                                    <button onclick="addToCart(@order.OrderId, ${item.ProductId},  ${item.unitPrice}, ${item.unitsInStock})">Add To Cart</button>
                                                </td>
                                        </tr>`)
                    })
                }
            });
        });
        
        
        function addToCart(orderid, productid, unitprice, unitsinstock) {
            debugger
            $.ajax(
                {
                    type:"POST",
                    url: 'https://localhost:7221/api/OrderDetails',
                    contentType: 'application/json',
                    data: JSON.stringify(
                        {
                            "OrderId": orderid,
                            "ProductId": productid,
                            "UnitPrice": unitprice,
                            "Quantity": 1,
                            "UnitsInStock": unitsinstock
                        }
                    ),
                    dataType: 'json',
                    success: function (data) {
                        DisplayText("Thêm sản phẩm thành công")
                    },
                    error: function () {
                        DisplayText("Thêm sản phẩm thành công")
                    },
                }
            )
        }
    </script>
}